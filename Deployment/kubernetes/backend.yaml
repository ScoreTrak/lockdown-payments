apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  selector:
    matchLabels:
      app: backend
  replicas: 3
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
        - name: init-certs
          image: cockroachdb/cockroach-k8s-request-cert:0.4
          imagePullPolicy: IfNotPresent
          command:
            - "/bin/ash"
            - "-ecx"
            - "/request-cert -namespace=${POD_NAMESPACE} -certs-dir=/cockroach-certs -type=client -user=root -symlink-ca-from=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: client-certs
              mountPath: /cockroach-certs
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: cockroach-cert-token

        - name: change-cert-perms
          image: cockroachdb/cockroach-k8s-request-cert:0.4
          imagePullPolicy: IfNotPresent
          command:
            - "/bin/ash"
            - "-ecx"
            - "chown 1234:1234 /cockroach-certs/client.root.key /cockroach-certs/client.root.crt"
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: client-certs
              mountPath: /cockroach-certs


        - name: start db migration
          image: ubnetdef/lockdown-commerce-backend:latest
          imagePullPolicy: IfNotPresent
          command:
            - "bash"
            - "-c"
            - "python manage.py migrate"
          env:
            - name: "DATABASE_URL"
              value: "postgresql://root:SOME_SECURE_PASSWORD@scoretrak-cockroachdb-public:26257/bank?sslmode=require&sslcert=/cockroach-certs/client.root.crt&sslkey=/cockroach-certs/client.root.key&sslrootcert=/cockroach-certs/ca.crt"
            - name: USE_COCKROACHDB
              value: "true"
          volumeMounts:
            - name: client-certs
              mountPath: /cockroach-certs


        - name: create superuser
          image: ubnetdef/lockdown-commerce-backend:latest
          imagePullPolicy: IfNotPresent
          command:
            - "bash"
            - "-c"
            - "python manage.py createsuperuser --noinput"
          env: #https://stackoverflow.com/a/59467533/9296389
            - name: "DATABASE_URL"
              value: "postgresql://root:SOME_SECURE_PASSWORD@scoretrak-cockroachdb-public:26257/bank?sslmode=require&sslcert=/cockroach-certs/client.root.crt&sslkey=/cockroach-certs/client.root.key&sslrootcert=/cockroach-certs/ca.crt"
            - name: USE_COCKROACHDB
              value: "true"
            - name: DJANGO_SUPERUSER_PASSWORD
              value: SOME_SECURE_PASSWORD_FOR_ADMIN
            - name: DJANGO_SUPERUSER_USERNAME
              value: admin
            - name: DJANGO_SUPERUSER_EMAIL
              value: admin@local
          volumeMounts:
            - name: client-certs
              mountPath: /cockroach-certs


      containers:
        - name: backend
          image: ubnetdef/lockdown-commerce-backend:latest
          imagePullPolicy: Always
          env:
            - name: "DATABASE_URL"
              value: "postgresql://root:SOME_SECURE_PASSWORD@scoretrak-cockroachdb-public:26257/bank?sslmode=require&sslcert=/cockroach-certs/client.root.crt&sslkey=/cockroach-certs/client.root.key&sslrootcert=/cockroach-certs/ca.crt"
            - name: USE_COCKROACHDB
              value: "true"
            - name: SECRET_KEY
              value: "SOME_RANDOM_VALUE"
            - name: DISCORD_WEBHOOK_URL
              value: "http://SomeDiscordWebHook"
          ports:
            - containerPort: 8000
          volumeMounts:
            - name: client-certs
              mountPath: /cockroach-certs
          command:
            - /bin/bash
            - -c
            - sleep 20; daphne -b 0.0.0.0 -p 8000 ldfinance.asgi:application #For some reason sleeping is required, otherwise we get: Is the server running on host "scoretrak-cockroachdb-public" (10.233.16.67) and accepting TCP/IP connections on port 26257?

#          livenessProbe:
#            httpGet:
#              path: /
#              port: 8000
#            initialDelaySeconds: 3
#            periodSeconds: 3

      volumes:
        - name: client-certs
          emptyDir: {}
        - name: cockroach-cert-token
          secret:
            secretName: cockroachdb-client-secret

---
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  selector:
    app: backend
  ports:
    - port: 8000
      name: http
